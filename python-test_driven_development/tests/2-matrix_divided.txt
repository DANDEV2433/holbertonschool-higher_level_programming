"""

exemple functions tests that divides all elements of a matrix

"""
# import de la fonction
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# test for matrix with integer
>>> matrix = [[1, 3, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 1.0, 1.0], [1.33, 1.67, 2.0]]

# Test for matriw with float
>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> matrix_divided(matrix, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

# Test for division with 0
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# test for wrong type div
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "z")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# test with a difference in line length
>>> matrix = [[1, 2], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with caracter
>>> matrix = "a matrix"
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for a matrix with integers and infinite divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Test for a missing argument
>>> matrix_divided([[1, 2, 3]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# test for two missing arguments
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'